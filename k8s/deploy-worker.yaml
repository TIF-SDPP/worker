apiVersion: apps/v1
kind: Deployment
metadata:
  name: deployment-worker
  namespace: default

spec:
  replicas: 1

  selector:
    matchLabels:
      app: worker

  template:
    metadata:
      labels: # Todas las etiquetas son privadas, por la falta de prefijo.
        app: worker
        tier: worker

    spec:
      containers:
      - name: worker
        image: leoduville5/worker_cpu:v5
        imagePullPolicy: Always
        # resources:
        #   requests:
        #     memory: "100Mi"
        #     cpu: "250m"
        #   limits:
        #     memory: "2048Mi"
        #     cpu: "1000m"
        env:
        - name: "PORT"
          value: "8080"

      #   volumeMounts:
      #   - name: maestro-secret-volume
      #     mountPath: /app/
      #     readOnly: true
      # volumes:
      # - name: maestro-secret-volume
      #   secret:
      #     secretName: maestro-secrets

      # https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/
      # https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#scheduling
      #
      # El siguiente código indica que el pod puede ser desplegado en nodos de tipo spot.
      tolerations:
      - key: instance_type
        operator: Equal
        value: spot
        effect: NoSchedule

      affinity:
        # El siguiente código permite que el pod sea desplegado en un nodo matcheado por 'matchExpressions'.
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: team
                operator: In
                values:
                - devops